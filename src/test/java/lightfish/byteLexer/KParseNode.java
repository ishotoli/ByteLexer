package lightfish.byteLexer;
 class KParseNode extends P{  public  int parse(){int c;{c=cc(x);if(c=='e'){{c=cc(x);if(c=='y'){{c=cc(x);if(c=='_'){{c=cc(x);if(c=='b'){{c=cc(x);if(c=='l'){{c=cc(x);if(c=='o'){{c=cc(x);if(c=='c'){{c=cc(x);if(c=='k'){{c=cc(x);if(c=='_'){{c=cc(x);if(c=='s'){{c=cc(x);if(c=='i'){{c=cc(x);if(c=='z'){{c=cc(x);if(c=='e'){c=cc(x);if (isBlank(c)){t=H.KEY_BLOCK_SIZE;return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}if(c=='s'){c=cc(x);if (isBlank(c)){t=H.KEYS;return x;}}return x;}}endId();return x;}}if(c=='i'){{c=cc(x);if(c=='l'){{c=cc(x);if(c=='l'){c=cc(x);if (isBlank(c)){t=H.KILL;return x;}}endId();return x;}}endId();return x;}}endId();return x;}}}