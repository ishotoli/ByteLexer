package lightfish.byteLexer;
 class FParseNode extends P{  public  int parse(){int c;switch (cc(x)){
case 'l' :{{c=cc(x);if(c=='u'){{c=cc(x);if(c=='s'){{c=cc(x);if(c=='h'){t=H.FLUSH;++x;return x;}endId();return x;}}endId();return x;}}if(c=='o'){{c=cc(x);if(c=='a'){{c=cc(x);if(c=='t'){{c=cc(x);if(c=='4'){t=H.FLOAT4;++x;return x;}if(c=='8'){t=H.FLOAT8;++x;return x;}return x;}}endId();return x;}}endId();return x;}}endId();return x;}}
case 'i' :{{c=cc(x);if(c=='e'){{c=cc(x);if(c=='l'){{c=cc(x);if(c=='d'){{c=cc(x);if(c=='s'){t=H.FIELDS;++x;return x;}endId();return x;}}endId();return x;}}endId();return x;}}if(c=='l'){{c=cc(x);if(c=='e'){{c=cc(x);if(c=='_'){{c=cc(x);if(c=='b'){{c=cc(x);if(c=='l'){{c=cc(x);if(c=='o'){{c=cc(x);if(c=='c'){{c=cc(x);if(c=='k'){{c=cc(x);if(c=='_'){{c=cc(x);if(c=='s'){{c=cc(x);if(c=='i'){{c=cc(x);if(c=='z'){{c=cc(x);if(c=='e'){t=H.FILE_BLOCK_SIZE;++x;return x;}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}return x;}}if(c=='t'){{c=cc(x);if(c=='e'){{c=cc(x);if(c=='r'){t=H.FILTER;++x;return x;}endId();return x;}}endId();return x;}}endId();return x;}}if(c=='r'){{c=cc(x);if(c=='s'){{c=cc(x);if(c=='t'){t=H.FIRST;++x;return x;}endId();return x;}}endId();return x;}}if(c=='x'){{c=cc(x);if(c=='e'){{c=cc(x);if(c=='d'){t=H.FIXED;++x;return x;}endId();return x;}}endId();return x;}}endId();return x;}}
case 'e' :{{c=cc(x);if(c=='t'){{c=cc(x);if(c=='c'){{c=cc(x);if(c=='h'){t=H.FETCH;++x;return x;}endId();return x;}}endId();return x;}}endId();return x;}}
case 'u' :{{c=cc(x);if(c=='n'){{c=cc(x);if(c=='c'){{c=cc(x);if(c=='t'){{c=cc(x);if(c=='i'){{c=cc(x);if(c=='o'){{c=cc(x);if(c=='n'){t=H.FUNCTION;++x;return x;}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}if(c=='l'){{c=cc(x);if(c=='l'){{c=cc(x);if(c=='t'){{c=cc(x);if(c=='e'){{c=cc(x);if(c=='x'){{c=cc(x);if(c=='t'){t=H.FULLTEXT;++x;return x;}endId();return x;}}endId();return x;}}endId();return x;}}return x;}}endId();return x;}}endId();return x;}}
case 'r' :{{c=cc(x);if(c=='a'){{c=cc(x);if(c=='c'){{c=cc(x);if(c=='_'){{c=cc(x);if(c=='s'){{c=cc(x);if(c=='e'){{c=cc(x);if(c=='c'){{c=cc(x);if(c=='o'){{c=cc(x);if(c=='n'){{c=cc(x);if(c=='d'){t=H.FRAC_SECOND;++x;return x;}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}if(c=='o'){{c=cc(x);if(c=='m'){t=H.FROM;++x;return x;}endId();return x;}}endId();return x;}}
case 'a' :{{c=cc(x);if(c=='u'){{c=cc(x);if(c=='l'){{c=cc(x);if(c=='t'){{c=cc(x);if(c=='s'){t=H.FAULTS;++x;return x;}endId();return x;}}endId();return x;}}endId();return x;}}if(c=='l'){{c=cc(x);if(c=='s'){{c=cc(x);if(c=='e'){t=H.FALSE;++x;return x;}endId();return x;}}endId();return x;}}if(c=='s'){{c=cc(x);if(c=='t'){t=H.FAST;++x;return x;}endId();return x;}}endId();return x;}}
case 'o' :{{c=cc(x);if(c=='r'){{c=cc(x);if(c=='e'){{c=cc(x);if(c=='i'){{c=cc(x);if(c=='g'){{c=cc(x);if(c=='n'){t=H.FOREIGN;++x;return x;}endId();return x;}}endId();return x;}}endId();return x;}}if(c=='m'){{c=cc(x);if(c=='a'){{c=cc(x);if(c=='t'){t=H.FORMAT;++x;return x;}endId();return x;}}endId();return x;}}if(c=='c'){{c=cc(x);if(c=='e'){t=H.FORCE;++x;return x;}endId();return x;}}return x;}}if(c=='u'){{c=cc(x);if(c=='n'){{c=cc(x);if(c=='d'){t=H.FOUND;++x;return x;}endId();return x;}}endId();return x;}}if(c=='l'){{c=cc(x);if(c=='l'){{c=cc(x);if(c=='o'){{c=cc(x);if(c=='w'){{c=cc(x);if(c=='s'){t=H.FOLLOWS;++x;return x;}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}
default:endId();return x;
}}}