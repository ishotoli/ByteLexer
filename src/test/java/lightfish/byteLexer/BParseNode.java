package lightfish.byteLexer;
 class BParseNode extends P{  public  int parse(){int c;switch (cc(x)){
case 'l' :{{c=cc(x);if(c=='o'){{c=cc(x);if(c=='b'){c=cc(x);if (isBlank(c)){t=H.BLOB;return x;}}if(c=='c'){{c=cc(x);if(c=='k'){c=cc(x);if (isBlank(c)){t=H.BLOCK;return x;}}endId();return x;}}endId();return x;}}endId();return x;}}
case 'i' :{{c=cc(x);if(c=='n'){{c=cc(x);if(c=='a'){{c=cc(x);if(c=='r'){{c=cc(x);if(c=='y'){c=cc(x);if (isBlank(c)){t=H.BINARY;return x;}}endId();return x;}}endId();return x;}}if(c=='l'){{c=cc(x);if(c=='o'){{c=cc(x);if(c=='g'){c=cc(x);if (isBlank(c)){t=H.BINLOG;return x;}}endId();return x;}}endId();return x;}}if(c=='_'){{c=cc(x);if(c=='n'){{c=cc(x);if(c=='u'){{c=cc(x);if(c=='m'){c=cc(x);if (isBlank(c)){t=H.BIN_NUM;return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}if(c=='t'){{c=cc(x);if(c=='_'){{c=cc(x);if(c=='a'){{c=cc(x);if(c=='n'){{c=cc(x);if(c=='d'){c=cc(x);if (isBlank(c)){t=H.BIT_AND;return x;}}endId();return x;}}endId();return x;}}if(c=='x'){{c=cc(x);if(c=='o'){{c=cc(x);if(c=='r'){c=cc(x);if (isBlank(c)){t=H.BIT_XOR;return x;}}endId();return x;}}endId();return x;}}if(c=='o'){{c=cc(x);if(c=='r'){c=cc(x);if (isBlank(c)){t=H.BIT_OR;return x;}}endId();return x;}}endId();return x;}}return x;}}if(c=='g'){{c=cc(x);if(c=='i'){{c=cc(x);if(c=='n'){{c=cc(x);if(c=='t'){c=cc(x);if (isBlank(c)){t=H.BIGINT;return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}
case 'y' :{{c=cc(x);if(c=='t'){{c=cc(x);if(c=='e'){c=cc(x);if (isBlank(c)){t=H.BYTE;return x;}}endId();return x;}}return x;}}
case 'e' :{{c=cc(x);if(c=='f'){{c=cc(x);if(c=='o'){{c=cc(x);if(c=='r'){{c=cc(x);if(c=='e'){c=cc(x);if (isBlank(c)){t=H.BEFORE;return x;}}endId();return x;}}endId();return x;}}endId();return x;}}if(c=='t'){{c=cc(x);if(c=='w'){{c=cc(x);if(c=='e'){{c=cc(x);if(c=='e'){{c=cc(x);if(c=='n'){c=cc(x);if (isBlank(c)){t=H.BETWEEN;return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}if(c=='g'){{c=cc(x);if(c=='i'){{c=cc(x);if(c=='n'){c=cc(x);if (isBlank(c)){t=H.BEGIN;return x;}}endId();return x;}}endId();return x;}}endId();return x;}}
case 't' :{{c=cc(x);if(c=='r'){{c=cc(x);if(c=='e'){{c=cc(x);if(c=='e'){c=cc(x);if (isBlank(c)){t=H.BTREE;return x;}}endId();return x;}}endId();return x;}}endId();return x;}}
case 'a' :{{c=cc(x);if(c=='l'){{c=cc(x);if(c=='a'){{c=cc(x);if(c=='n'){{c=cc(x);if(c=='c'){{c=cc(x);if(c=='e'){c=cc(x);if (isBlank(c)){t=H.BALANCE;return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}if(c=='c'){{c=cc(x);if(c=='k'){{c=cc(x);if(c=='e'){{c=cc(x);if(c=='n'){{c=cc(x);if(c=='d'){c=cc(x);if (isBlank(c)){t=H.BACKEND;return x;}}endId();return x;}}endId();return x;}}if(c=='u'){{c=cc(x);if(c=='p'){c=cc(x);if (isBlank(c)){t=H.BACKUP;return x;}}endId();return x;}}endId();return x;}}endId();return x;}}endId();return x;}}
case 'o' :{{c=cc(x);if(c=='t'){{c=cc(x);if(c=='h'){c=cc(x);if (isBlank(c)){t=H.BOTH;return x;}}endId();return x;}}if(c=='o'){{c=cc(x);if(c=='l'){{c=cc(x);if(c=='e'){{c=cc(x);if(c=='a'){{c=cc(x);if(c=='n'){c=cc(x);if (isBlank(c)){t=H.BOOLEAN;return x;}}endId();return x;}}endId();return x;}}return x;}}endId();return x;}}endId();return x;}}
default:endId();return x;
}}}